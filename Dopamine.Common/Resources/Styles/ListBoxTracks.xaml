<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Dopamine.Common.Controls"
    xmlns:converters="clr-namespace:Dopamine.Common.Presentation.Converters"
    xmlns:prism="clr-namespace:Dopamine.Common.Prism"
    xmlns:presentationutils="clr-namespace:Dopamine.Common.Presentation.Utils"
    xmlns:base="clr-namespace:Dopamine.Common.Base">

    <converters:InvertingBooleanConverter x:Key="InvertingBooleanConverter" />
    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:InvertingBooleanToVisibilityConverter x:Key="InvertingBooleanToVisibilityConverter" />
    <converters:AddEllipsisConverter x:Key="AddEllipsisConverter" />

    <!-- ContextMenu -->
    <ContextMenu x:Key="ListBoxTracksContextMenu" x:Shared="False">
        <ContextMenu.Resources>
            <presentationutils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </ContextMenu.Resources>

        <MenuItem Header="{DynamicResource Language_View_In_Explorer}" InputGestureText="{DynamicResource Language_Ctrl_E}" Command="{Binding ViewInExplorerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Jump_To_Playing_Song}" InputGestureText="{DynamicResource Language_Ctrl_J}" Command="{Binding JumpToPlayingTrackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Separator/>
        <MenuItem
            InputGestureText="" 
            Command="{Binding DataContext.EditTracksCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Edit}"/>
                    <controls:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Play_Next}" InputGestureText="" Command="{Binding DataContext.PlayNextCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddTracksToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="Name">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{x:Static prism:ApplicationCommands.AddTracksToPlaylistCommand}" />
                    <Setter Property="CommandParameter" Value="{Binding Name}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                    <Separator/>
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                </CompositeCollection>
            </MenuItem.ItemsSource>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Search_Online}" ItemsSource="{Binding DataContext.ContextMenuSearchProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" DisplayMemberPath="Name" IsEnabled="{Binding DataContext.HasContextMenuSearchProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{Binding DataContext.SearchOnlineCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding Id}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>

        <MenuItem 
            InputGestureText="{DynamicResource Language_Key_Del}" 
            Command="{Binding DataContext.RemoveSelectedTracksCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Remove}"/>
                    <controls:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Command>
                <Binding Path="DataContext.RemoveSelectedTracksFromDiskCommand" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
            </MenuItem.Command>
            <MenuItem.Visibility>
                <Binding Path="DataContext.ShowRemoveFromDisk" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" Converter="{StaticResource BooleanToCollapsedConverter}" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
            </MenuItem.Visibility>
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Remove_From_Disk}"/>
                    <controls:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Information}" InputGestureText="" Command="{Binding DataContext.ShowSelectedTrackInformationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
    </ContextMenu>

    <!-- GroupItem -->
    <Style x:Key="TracksHeader" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}" Background="#00000000">
                        <StackPanel Margin="0,0,0,15">
                            <StackPanel>
                                <TextBlock Text="{Binding GroupHeader}" 
                                   DataContext="{Binding Items}" 
                                   Margin="0,5,0,0" 
                                   HorizontalAlignment="Stretch" 
                                   FontSize="20" 
                                   FontWeight="Light"
                                   TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource RG_ForegroundBrush}"/>
                                <TextBlock Text="{Binding GroupSubHeader}" 
                                   DataContext="{Binding Items}" 
                                   Margin="0,0,0,10" 
                                   HorizontalAlignment="Stretch" 
                                   TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource RG_AccentBrush}"/>
                            </StackPanel>
                            <ItemsPresenter HorizontalAlignment="Stretch"/>
                        </StackPanel>
                        <Border.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock Text="{Binding GroupHeader}" 
                                   DataContext="{Binding Items}" 
                                   FontWeight="Bold"/>
                                    <TextBlock Text="{Binding GroupSubHeader}" 
                                   DataContext="{Binding Items}" />
                                </StackPanel>
                            </ToolTip>
                        </Border.ToolTip>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBoxItem -->
    <Style x:Key="ListBoxTracksItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ContextMenu" Value="{StaticResource ListBoxTracksContextMenu}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Grid.Background>
                            <SolidColorBrush Color="{DynamicResource RG_ControlsBackgroundMediumTransparentBrushColor}" Opacity="0"/>
                        </Grid.Background>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Background.Opacity">
                                        <DoubleAnimation To="0.1" Duration="{x:Static base:Constants.MouseEnterDuration}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Background.Opacity">
                                        <DoubleAnimation To="0" Duration="{x:Static base:Constants.MouseLeaveDuration}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                        <Label x:Name="DummyLabel" Foreground="{DynamicResource RG_InactiveForegroundBrush}" 
                               Visibility="Collapsed">
                            <Label.Background>
                                <SolidColorBrush Color="Transparent" Opacity="1"/>
                            </Label.Background>
                        </Label>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource RG_AccentBrush}" />
                            <Setter TargetName="DummyLabel" Property="Foreground" Value="{DynamicResource RG_AccentBrush}"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DummyLabel" Property="Background" Value="{DynamicResource RG_AccentBrush}"/>
                            <Setter TargetName="DummyLabel" Property="Foreground" Value="{DynamicResource RG_WhiteBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource RG_WhiteBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->
    <Style x:Key="ListBoxTracks" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxTracksItem}" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel>
                        <Border Background="{Binding Background,ElementName=DummyLabel}"
                                Height="24" 
                                Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}">
                            <Border.ToolTip>
                                <ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="{Binding TrackTitle}" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding ArtistName}"/>
                                    </StackPanel>
                                </ToolTip>
                            </Border.ToolTip>
                            <DockPanel>
                                <TextBlock x:Name="TrackNumber"
                                           DockPanel.Dock="Left" Margin="2,0,5,0"
                                           Visibility="{Binding ShowTrackNumber, Converter={StaticResource BooleanToCollapsedConverter}}"
                                           Text="{Binding FormattedTrackNumber}" 
                                           VerticalAlignment="Center"
                                           FontSize="13"
                                           MinWidth="17"
                                           Foreground="{Binding Foreground,ElementName=DummyLabel}"/>
                                <DockPanel>
                                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                        <Label Style="{DynamicResource SpectrumAnimation}"
                                                Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                IsHitTestVisible="{Binding IsPaused, Converter={StaticResource InvertingBooleanConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                Foreground="{Binding Foreground,ElementName=DummyLabel}" 
                                                Margin="10,0,10,0" 
                                                VerticalAlignment="Center"/>
                                        <controls:RatingButton 
                                            VerticalAlignment="Center" 
                                            Visibility="{Binding DataContext.EnableRating,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Converter={StaticResource BooleanToCollapsedConverter}}"
                                            Rating="{Binding Rating, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        <controls:LoveButton 
                                            Margin="10,0,0,0"
                                            VerticalAlignment="Center" 
                                            Visibility="{Binding DataContext.EnableLove,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Converter={StaticResource BooleanToCollapsedConverter}}"
                                            Love="{Binding Love, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        <TextBlock
                                                Width="60"
                                                Text="{Binding Duration}" 
                                                TextAlignment="Right"
                                                FontSize="13" 
                                                VerticalAlignment="Center"
                                                Margin="0,0,2,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding TrackTitle}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch" 
                                               TextTrimming="CharacterEllipsis"
                                               Margin="2,0,0,0"
                                               FontSize="13"/>
                                </DockPanel>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>