<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Dopamine.Common.Presentation.Converters">

    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:InvertingBooleanToCollapsedConverter x:Key="InvertingBooleanToCollapsedConverter" />
    <converters:InvertingBooleanToVisibilityConverter x:Key="InvertingBooleanToVisibilityConverter" />

    <!-- 
    It is necessary to split up the ContextMenu Styles per ListBox. As each DataContext.*Command only ever gets
    fired only in the ViewModel which fired the command the firts time. I have no idea why this happens.
    -->

    <!-- Shared -->

    <Style x:Key="ListBoxGenresItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <DockPanel>
                        <!-- Header -->
                        <Button 
                            DockPanel.Dock="Top"
                            Style="{DynamicResource TransparentButton}" 
                            Visibility="{Binding IsHeader,Converter={StaticResource BooleanToCollapsedConverter}}"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Top" 
                            Cursor="Hand"
                            Height="24"
                            Margin="0,5,0,5"
                            Command="{Binding DataContext.ShowGenresZoomCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                            <Grid Width="24" Height="24" HorizontalAlignment="Left">
                                <Viewbox Width="24" Height="24" Panel.ZIndex="0">
                                    <Path x:Name="Droplet" Data="{DynamicResource Droplet}" Fill="{DynamicResource RG_AccentBrush}"/>
                                </Viewbox>
                                <Label Padding="0" Margin="0,-2,0,0" Content="{Binding Header}" Panel.ZIndex="1" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource RG_WhiteBrush}"/>
                                <Viewbox Width="24" Height="24" Panel.ZIndex="2">
                                    <Path x:Name="Overlay" Data="{DynamicResource Droplet}" Fill="{DynamicResource RG_IconGradientBrush}"/>
                                </Viewbox>
                            </Grid>
                        </Button>
                        <!-- Genre -->
                        <Border>
                            <Border 
                            Background="{TemplateBinding Background}" 
                            Height="24">
                                <TextBlock Text="{Binding GenreName}" 
                               VerticalAlignment="Center"
                               HorizontalAlignment="Stretch" 
                               TextTrimming="CharacterEllipsis"
                               FontSize="13"
                               Margin="2,0,2,0"
                               ToolTip="{Binding GenreName}"
                               Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}"/>
                            </Border>
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <Trigger Property="Border.IsMouseOver" Value="True">
                                            <Setter Property="Border.Background" Value="{DynamicResource RG_ControlsBackgroundMediumTransparentBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RG_AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource RG_WhiteBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxGenres" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>

    <!-- Genres screen -->

    <ContextMenu x:Key="Genres_ListBoxGenresContextMenu">
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddGenresToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" ItemsSource="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" DisplayMemberPath="PlaylistName" IsEnabled="{Binding DataContext.HasContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{Binding DataContext.AddGenresToPlaylistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                    <Setter Property="CommandParameter" Value="{Binding PlaylistName}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Search_Video_Clip}" ItemsSource="{Binding DataContext.ContextMenuVideoProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" DisplayMemberPath="Name">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{Binding DataContext.SearchVideoClipCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="Genres_ListBoxGenresItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxGenresItem}">
        <Setter Property="ContextMenu" Value="{StaticResource Genres_ListBoxGenresContextMenu}"/>
    </Style>

    <Style x:Key="Genres_ListBoxGenres" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxGenres}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource Genres_ListBoxGenresItem}" />
    </Style>
</ResourceDictionary>
