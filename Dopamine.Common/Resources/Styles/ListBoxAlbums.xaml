<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dc="clr-namespace:Digimezzo.WPFControls;assembly=Digimezzo.WPFControls"
    xmlns:controls="clr-namespace:Dopamine.Common.Controls"
    xmlns:converters="clr-namespace:Dopamine.Common.Presentation.Converters"
    xmlns:base="clr-namespace:Dopamine.Core.Base;assembly=Dopamine.Core"
    xmlns:prism="clr-namespace:Dopamine.Core.Prism;assembly=Dopamine.Core"
    xmlns:presentationutils="clr-namespace:Dopamine.Common.Presentation.Utils">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Dopamine.Common;component/Resources/Styles/FontStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:InvertingBooleanToCollapsedConverter x:Key="InvertingBooleanToCollapsedConverter" />
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:AddValueConverter x:Key="AddValueConverter" />
    <converters:PathToImageConverter x:Key="PathToImageConverter" />
    <converters:AddEllipsisConverter x:Key="AddEllipsisConverter" />

    <!-- 
    It is necessary to split up the ContextMenu Styles per ListBox. As each DataContext.*Command only ever gets
    fired only in the ViewModel which fired the command the first time. I have no idea why this happens.
    -->

    <!-- Shared -->
    <Style x:Key="ListBoxAlbumsItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border x:Name="ProxyBorder" Height="0" Visibility="Hidden" Background="{DynamicResource RG_ForegroundBrush}"/>
                        <Border x:Name="ProxyBorderLight" Height="0" Visibility="Hidden" Background="{DynamicResource RG_InactiveWhiteBrush}"/>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ProxyBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ProxyBorder" Property="Background" Value="{DynamicResource RG_WhiteBrush}"/>
                            <Setter TargetName="ProxyBorderLight" Property="Background" Value="{DynamicResource RG_WhiteBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxAlbums" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!--<dc:VirtualizingWrapPanel 
                        ChildWidth="{Binding Path=DataContext.CoverSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Converter={StaticResource AddValueConverter},ConverterParameter=4}" 
                        ChildHeight="{Binding Path=DataContext.AlbumHeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Converter={StaticResource AddValueConverter},ConverterParameter=4}" ScrollOffset="50"/>-->
                    <dc:VirtualizingWrapPanel 
                        ChildWidth="{Binding Path=DataContext.AlbumWidth,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                        ChildHeight="{Binding Path=DataContext.AlbumHeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                        ScrollOffset="50"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <!-- Selection border -->
                        <Border 
                            Panel.ZIndex="0" 
                            Background="{DynamicResource RG_AccentBrush}"
                            Width="{Binding Path=DataContext.AlbumWidth,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            Height="{Binding Path=DataContext.AlbumHeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                            Visibility="{Binding Visibility,ElementName=ProxyBorder}"/>
                        <StackPanel>
                            <Grid Panel.ZIndex="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2,2,2,0">
                                <Grid Panel.ZIndex="2" Visibility="{Binding DataContext.IsMultipleAlbumsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Polygon x:Name="Triangle" 
                                         Fill="{DynamicResource RG_AccentBrush}" 
                                         Panel.ZIndex="0"
                                         Stroke="Transparent"
                                         Visibility="{Binding Visibility,ElementName=ProxyBorder}"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Top"
                                         Margin="0,-1,-1,0">
                                         <Polygon.Points>
                                            <Point X="-30" Y="0"/>
                                            <Point X="0" Y="0"/>
                                            <Point X="0" Y="30"/>
                                         </Polygon.Points>
                                    </Polygon>
                                    <TextBlock x:Name="AlbumSelector"
                                       Text="&#xE8FB;"
                                       Style="{StaticResource SegoeAssets}"
                                       Panel.ZIndex="1"
                                       Margin="1"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       Foreground="{DynamicResource RG_WhiteBrush}" 
                                       Visibility="{Binding Visibility,ElementName=ProxyBorder}"
                                       FontSize="13"/>
                                </Grid>
                                <controls:Tile Width="{Binding Path=DataContext.CoverSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                             Height="{Binding Path=DataContext.CoverSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                             Panel.ZIndex="0"
                                             IconSizePercent="{x:Static base:Constants.HeadPhoneSmallSize}"
                                             Background="{DynamicResource RG_ControlsBackgroundMediumBrush}">
                                    <controls:Tile.Content>
                                        <Viewbox>
                                            <Path Data="{DynamicResource FullLogo}" Fill="{DynamicResource RG_ControlsBackgroundHighBrush}"/>
                                        </Viewbox>
                                    </controls:Tile.Content>
                                </controls:Tile>
                                <Image Panel.ZIndex="1" 
                                   Width="{Binding Path=DataContext.CoverSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                   Height="{Binding Path=DataContext.CoverSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                   RenderOptions.BitmapScalingMode="LowQuality">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource PathToImageConverter}">
                                            <Binding Path="ArtworkPath" IsAsync="True"/>
                                            <Binding Path="DataContext.UpscaledCoverSize" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                            </Grid>
                            <StackPanel Panel.ZIndex="1" Background="#00000000" Height="{x:Static base:Constants.AlbumTileAlbumInfoHeight}">
                                <StackPanel Margin="2,2,2,0" Visibility="{Binding DataContext.OrderedByYear, Converter={StaticResource InvertingBooleanToCollapsedConverter},RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                    <TextBlock Text="{Binding AlbumTitle}" TextTrimming="CharacterEllipsis" Foreground="{Binding Background,ElementName=ProxyBorder}"/>
                                    <TextBlock Text="{Binding AlbumArtist}" TextTrimming="CharacterEllipsis" Foreground="{Binding Background,ElementName=ProxyBorderLight}"/>
                                </StackPanel>
                                <StackPanel Margin="2,2,2,0" Visibility="{Binding DataContext.OrderedByYear,Converter={StaticResource BooleanToCollapsedConverter},RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                    <TextBlock Text="{Binding Year}" TextTrimming="CharacterEllipsis" Foreground="{Binding Background,ElementName=ProxyBorder}"/>
                                    <TextBlock Text="{Binding AlbumTitle}" TextTrimming="CharacterEllipsis" Foreground="{Binding Background,ElementName=ProxyBorderLight}"/>
                                </StackPanel>
                                <StackPanel.ToolTip>
                                    <ToolTip>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding AlbumArtist}" FontWeight="Bold"/>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding AlbumTitle}"/>
                                                <TextBlock Margin="5,0,0,0" Text="{Binding ToolTipYear}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Artists screen -->
    <ContextMenu x:Key="Artists_ListBoxAlbumsContextMenu">
        <ContextMenu.Resources>
            <presentationutils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </ContextMenu.Resources>

        <MenuItem
            InputGestureText="" 
            Command="{Binding DataContext.EditAlbumCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Edit}"/>
                    <controls:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Cover_Size}" InputGestureText="">
            <MenuItem Header="{DynamicResource Language_Small}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="1" IsCheckable="True" IsChecked="{Binding DataContext.IsSmallCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
            <MenuItem Header="{DynamicResource Language_Medium}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="2" IsCheckable="True" IsChecked="{Binding DataContext.IsMediumCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
            <MenuItem Header="{DynamicResource Language_Large}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="3" IsCheckable="True" IsChecked="{Binding DataContext.IsLargeCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddAlbumsToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="PlaylistName">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{x:Static prism:ApplicationCommands.AddAlbumsToPlaylistCommand}" />
                    <Setter Property="CommandParameter" Value="{Binding PlaylistName}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                    <Separator/>
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                </CompositeCollection>
            </MenuItem.ItemsSource>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="Artists_ListBoxAlbumsItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxAlbumsItem}">
        <Setter Property="ContextMenu" Value="{StaticResource Artists_ListBoxAlbumsContextMenu}"/>
    </Style>

    <Style x:Key="Artists_ListBoxAlbums" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxAlbums}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource Artists_ListBoxAlbumsItem}" />
    </Style>

    <!-- Genres screen -->
    <ContextMenu x:Key="Genres_ListBoxAlbumsContextMenu">
        <ContextMenu.Resources>
            <presentationutils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </ContextMenu.Resources>

        <MenuItem InputGestureText="" Command="{Binding DataContext.EditAlbumCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Edit}"/>
                    <controls:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Cover_Size}" InputGestureText="">
            <MenuItem Header="{DynamicResource Language_Small}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="1" IsCheckable="True" IsChecked="{Binding DataContext.IsSmallCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
            <MenuItem Header="{DynamicResource Language_Medium}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="2" IsCheckable="True" IsChecked="{Binding DataContext.IsMediumCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
            <MenuItem Header="{DynamicResource Language_Large}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="3" IsCheckable="True" IsChecked="{Binding DataContext.IsLargeCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddAlbumsToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="PlaylistName">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{x:Static prism:ApplicationCommands.AddAlbumsToPlaylistCommand}" />
                    <Setter Property="CommandParameter" Value="{Binding PlaylistName}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                    <Separator/>
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                </CompositeCollection>
            </MenuItem.ItemsSource>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="Genres_ListBoxAlbumsItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxAlbumsItem}">
        <Setter Property="ContextMenu" Value="{StaticResource Genres_ListBoxAlbumsContextMenu}"/>
    </Style>

    <Style x:Key="Genres_ListBoxAlbums" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxAlbums}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource Genres_ListBoxAlbumsItem}" />
    </Style>

    <!-- Albums screen -->
    <ContextMenu x:Key="Albums_ListBoxAlbumsContextMenu">
        <ContextMenu.Resources>
            <presentationutils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </ContextMenu.Resources>

        <MenuItem InputGestureText="" Command="{Binding DataContext.EditAlbumCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Edit}"/>
                    <controls:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Cover_Size}" InputGestureText="">
            <MenuItem Header="{DynamicResource Language_Small}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="1" IsCheckable="True" IsChecked="{Binding DataContext.IsSmallCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
            <MenuItem Header="{DynamicResource Language_Medium}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="2" IsCheckable="True" IsChecked="{Binding DataContext.IsMediumCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
            <MenuItem Header="{DynamicResource Language_Large}" InputGestureText="" Command="{Binding DataContext.SetCoverSizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="3" IsCheckable="True" IsChecked="{Binding DataContext.IsLargeCoverSizeSelected,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddAlbumsToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="PlaylistName">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{x:Static prism:ApplicationCommands.AddAlbumsToPlaylistCommand}" />
                    <Setter Property="CommandParameter" Value="{Binding PlaylistName}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                    <Separator/>
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                </CompositeCollection>
            </MenuItem.ItemsSource>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="Albums_ListBoxAlbumsItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxAlbumsItem}">
        <Setter Property="ContextMenu" Value="{StaticResource Albums_ListBoxAlbumsContextMenu}"/>
    </Style>

    <Style x:Key="Albums_ListBoxAlbums" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxAlbums}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource Albums_ListBoxAlbumsItem}" />
    </Style>
</ResourceDictionary>