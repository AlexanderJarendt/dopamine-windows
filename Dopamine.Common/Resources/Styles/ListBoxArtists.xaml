<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Dopamine.Common.Presentation.Converters"
    xmlns:prism="clr-namespace:Dopamine.Common.Prism"
    xmlns:presentationutils="clr-namespace:Dopamine.Common.Presentation.Utils">

    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:InvertingBooleanToCollapsedConverter x:Key="InvertingBooleanToCollapsedConverter" />
    <converters:InvertingBooleanToVisibilityConverter x:Key="InvertingBooleanToVisibilityConverter" />
    <converters:AddEllipsisConverter x:Key="AddEllipsisConverter" />

    <!-- 
    It is necessary to split up the ContextMenu Styles per ListBox. As each DataContext.*Command only ever gets
    fired only in the ViewModel which fired the command the firts time. I have no idea why this happens.
    -->

    <!-- Shared -->
    <Style x:Key="ListBoxArtistsItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <DockPanel>
                            <!-- Header -->
                            <Button 
                            DockPanel.Dock="Top"
                            Style="{DynamicResource TransparentButton}" 
                            Visibility="{Binding IsHeader,Converter={StaticResource BooleanToCollapsedConverter}}"
                            HorizontalAlignment="Left" 
                            Cursor="Hand"
                            Height="24"
                            Margin="0,5,0,5"
                            Command="{Binding DataContext.ShowArtistsZoomCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <Grid Width="24" Height="24" HorizontalAlignment="Left">
                                    <Viewbox Width="24" Height="24" Panel.ZIndex="0">
                                        <Path x:Name="Droplet" Data="{DynamicResource Droplet}" Fill="{DynamicResource RG_AccentBrush}"/>
                                    </Viewbox>
                                    <Label Padding="0" Margin="0,-2,0,0" Content="{Binding Header}" Panel.ZIndex="1" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource RG_WhiteBrush}"/>
                                    <Viewbox Width="24" Height="24" Panel.ZIndex="2">
                                        <Path x:Name="Overlay" Data="{DynamicResource Droplet}" Fill="{DynamicResource RG_IconGradientBrush}"/>
                                    </Viewbox>
                                </Grid>
                            </Button>
                            <!-- Artist -->
                            <Border>
                                <Border
                           Background="{TemplateBinding Background}" 
                           Height="24">
                                    <TextBlock Text="{Binding ArtistName}" 
                               VerticalAlignment="Center"
                               HorizontalAlignment="Stretch" 
                               TextTrimming="CharacterEllipsis"
                               FontSize="13"
                               Margin="2,0,2,0"
                               ToolTip="{Binding ArtistName}"
                               Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}"/>
                                </Border>
                                <Border.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <Trigger Property="Border.IsMouseOver" Value="True">
                                                <Setter Property="Border.Background" Value="{DynamicResource RG_ControlsBackgroundMediumTransparentBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RG_AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource RG_WhiteBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxArtists" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>

    <!-- Artists screen -->
    <ContextMenu x:Key="Artists_ListBoxArtistsContextMenu">
        <ContextMenu.Resources>
            <presentationutils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </ContextMenu.Resources>
        
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddArtistsToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="PlaylistName">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
                    <Setter Property="Command" Value="{x:Static prism:ApplicationCommands.AddArtistsToPlaylistCommand}" />
                    <Setter Property="CommandParameter" Value="{Binding PlaylistName}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                    <Separator/>
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                </CompositeCollection>
            </MenuItem.ItemsSource>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="Artists_ListBoxArtistsItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxArtistsItem}">
        <Setter Property="ContextMenu" Value="{StaticResource Artists_ListBoxArtistsContextMenu}"/>
    </Style>

    <Style x:Key="Artists_ListBoxArtists" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxArtists}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource Artists_ListBoxArtistsItem}" />
    </Style>
</ResourceDictionary>
