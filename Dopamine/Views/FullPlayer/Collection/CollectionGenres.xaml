<baseviews:TracksViewBase x:Class="Dopamine.Views.FullPlayer.Collection.CollectionGenres"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:dc="clr-namespace:Digimezzo.WPFControls;assembly=Digimezzo.WPFControls"
                          xmlns:baseviews="clr-namespace:Dopamine.Views.Common.Base"
                          xmlns:pc="clr-namespace:Dopamine.Controls"
                          xmlns:corebase="clr-namespace:Dopamine.Core.Base;assembly=Dopamine.Core"
                          xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
                          xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                          prismMvvm:ViewModelLocator.AutoWireViewModel="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <baseviews:TracksViewBase.Resources>
        <Storyboard x:Key="ShowSemanticZoom">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="0" To="1" Duration="0:0:0.25" />
                <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" From="-50" To="0" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="HideSemanticZoom">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="1" To="0" Duration="0:0:0" />
                <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" From="0" To="-50" Duration="0:0:0" />
            </Storyboard>
        </Storyboard>
    </baseviews:TracksViewBase.Resources>

    <dc:MultiPanePanel 
        BorderBrush="{DynamicResource Brush_Border}" 
        SeparatorMarginTop="0" 
        ContentResizeDelay="25" 
        LeftPaneWidthPercent="{Binding LeftPaneWidthPercent, Mode=TwoWay}" 
        RightPaneWidthPercent="{Binding RightPaneWidthPercent, Mode=TwoWay}"
        LeftPaneMinimumWidth="230"
        MiddlePaneMinimumWidth="250"
        RightPaneMinimumWidth="250">
        <dc:MultiPanePanel.LeftPaneContent>
            <DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="15,0,15,15">
                    <TextBlock Text="{Binding GenresCount}" FontSize="13"
                                   Foreground="{DynamicResource Brush_Accent}" DockPanel.Dock="Left"/>
                    <Button x:Name="ShuffleAllButton" DockPanel.Dock="Right" Margin="0,1,0,0" FontSize="13" 
                                Style="{StaticResource TransparentButton}" 
                                VerticalContentAlignment="Center" ToolTip="{DynamicResource Language_Shuffle_All}" 
                                Command="{Binding DataContext.ShuffleAllCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                        <TextBlock Text="&#xE8B1;" Style="{StaticResource SegoeAssets}" FontSize="16"
                                       Foreground="{DynamicResource Brush_SecondaryForeground}" />
                    </Button>
                    <Button Content="{DynamicResource Language_Genres}" 
                                Style="{StaticResource TransparentButton}"
                                FontSize="13" 
                                Margin="10,0,0,0"
                                Foreground="{DynamicResource Brush_PrimaryForeground}"
                                Click="GenresButton_Click" ToolTip="{DynamicResource Language_Select_None}">
                    </Button>
                </DockPanel>
                <!--<StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5,0,0,15">
                    <Button x:Name="ShuffleAllButton" Margin="10,6,0,0" FontSize="{x:Static corebase:Constants.GlobalFontSize}" Style="{StaticResource TransparentButton}" VerticalContentAlignment="Center" ToolTip="{DynamicResource Language_Shuffle_All}" Command="{Binding DataContext.ShuffleAllCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                        <TextBlock Text="&#xE8B1;" Style="{StaticResource SegoeAssets}" Foreground="{DynamicResource Brush_PrimaryForeground}" FontSize="16"/>
                    </Button>
                    <Button x:Name="GenresButton" Margin="10,0,0,0" ToolTip="{DynamicResource Language_All_Genres}" Style="{StaticResource TransparentButton}" Click="GenresButton_Click">
                        <dc:LabelToLower Content="{DynamicResource Language_Genres}" 
                                                 Foreground="{DynamicResource Brush_PrimaryForeground}"
                                                 FontWeight="Light"
                                                 FontSize="20"
                                                 Padding="0"/>
                    </Button>
                    <Label Content="{Binding GenresCount}" Style="{StaticResource CountLabel}"/>
                    <Button Content="{Binding GenreOrderText,Converter={StaticResource StringToLowerConverter}}" 
                                Style="{StaticResource TransparentButton}"
                                FontWeight="Light" 
                                FontSize="20" 
                                Margin="10,0,0,0"
                                Foreground="{DynamicResource Brush_SecondaryForeground}"
                                Command="{Binding ToggleGenreOrderCommand}"/>
                </StackPanel>-->
                <Grid>
                    <Border Panel.ZIndex="0" Visibility="{Binding IsGenresZoomVisible,Converter={StaticResource InvertingBooleanToCollapsedConverter}}">
                        <dc:MultiSelectListBox x:Name="ListBoxGenres"
                                                       VirtualizingStackPanel.IsVirtualizing="True"
                                                       VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                       VirtualizingStackPanel.VirtualizationMode="Recycling"    
                                                       Style="{StaticResource ListBoxGenres}"
                                                       ItemsSource="{Binding GenresCvs.View,IsAsync=True}"
                                                       BorderThickness="0" 
                                                       MouseDoubleClick="ListBoxGenres_MouseDoubleClick" 
                                                       PreviewKeyDown="ListBoxGenres_PreviewKeyDown"
                                                       SelectionMode="Extended">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectedGenresCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </dc:MultiSelectListBox>
                    </Border>
                    <Border 
                            Panel.ZIndex="1" 
                            Visibility="{Binding IsGenresZoomVisible,Converter={StaticResource BooleanToCollapsedConverter}}" 
                            MaxWidth="300" 
                            MaxHeight="600">
                        <Border 
                                Opacity="0"
                                Panel.ZIndex="1"
                                Background="#00000000"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch">
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGenresZoomVisible}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard ="{StaticResource ShowSemanticZoom}"/>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard ="{StaticResource HideSemanticZoom}"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ListBox 
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         Style="{StaticResource ListBoxSemanticZoom}"
                                         ItemsSource="{Binding GenresZoomSelectors,IsAsync=True}"/>
                        </Border>
                    </Border>
                </Grid>
            </DockPanel>
        </dc:MultiPanePanel.LeftPaneContent>
        <dc:MultiPanePanel.MiddlePaneContent>
            <DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="15,0,15,15">
                    <TextBlock Text="{Binding AlbumsCount}" FontSize="13"
                               Foreground="{DynamicResource Brush_Accent}" DockPanel.Dock="Left"/>
                    <Button DockPanel.Dock="Right" Content="{Binding AlbumOrderText}" 
                            Style="{StaticResource TransparentButton}"
                            FontSize="13" 
                            Margin="10,0,0,0"
                            Foreground="{DynamicResource Brush_SecondaryForeground}"
                            Command="{Binding ToggleAlbumOrderCommand}" ToolTip="{DynamicResource Language_Toggle_Album_Order}"/>
                    <Button x:Name="AlbumsButton" Content="{DynamicResource Language_Albums}" FontSize="13" Margin="10,0,0,0"
                            Style="{StaticResource TransparentButton}"
                            Foreground="{DynamicResource Brush_PrimaryForeground}"
                            Click="AlbumsButton_Click" ToolTip="{DynamicResource Language_Select_None}"/>
                </DockPanel>
                <dc:MultiSelectListBox x:Name="ListBoxAlbums"
                                                                 Style="{StaticResource ListBoxAlbums}"
                                                                 ItemsSource="{Binding AlbumsCvs.View,IsAsync=True}"
                                                                 BorderThickness="0"
                                                                 MouseDoubleClick="ListBoxAlbums_MouseDoubleClick"
                                                                 PreviewKeyDown="ListBoxAlbums_PreviewKeyDown"
                                                                 SelectionMode="Extended"
                                                                 HorizontalAlignment="Left" 
                                                                 VerticalAlignment="Top">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedAlbumsCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                            <i:InvokeCommandAction Command="{Binding DelaySelectedAlbumsCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </dc:MultiSelectListBox>
            </DockPanel>
        </dc:MultiPanePanel.MiddlePaneContent>
        <dc:MultiPanePanel.RightPaneContent>
            <DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="15,0,15,15">
                    <TextBlock Text="{Binding TracksCount}" FontSize="13"
                               Foreground="{DynamicResource Brush_Accent}" DockPanel.Dock="Left"/>
                    <Button DockPanel.Dock="Right" Content="{Binding TrackOrderText}" 
                            Style="{StaticResource TransparentButton}"
                            FontSize="13" 
                            Margin="10,0,0,0"
                            Foreground="{DynamicResource Brush_SecondaryForeground}"
                            Command="{Binding ToggleTrackOrderCommand}" ToolTip="{DynamicResource Language_Toggle_Track_Order}"/>
                    <TextBlock Text="{DynamicResource Language_Songs}" FontSize="13" Margin="10,0,0,0"
                               Foreground="{DynamicResource Brush_PrimaryForeground}" />
                </DockPanel>
                <DockPanel>
                    <pc:TotalsInformation
                                DockPanel.Dock="Bottom"
                                Margin="15,15,15,0" 
                                Foreground="{DynamicResource Brush_SecondaryForeground}" 
                                FontSize="13"
                                TotalDurationInformation="{Binding TotalDurationInformation}"
                                TotalSizeInformation="{Binding TotalSizeInformation}"/>
                    <dc:MultiSelectListBox x:Name="ListBoxTracks"
                                                             VirtualizingStackPanel.IsVirtualizing="True"
                                                             VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                             VirtualizingStackPanel.VirtualizationMode="Recycling"                       
                                                             Style="{StaticResource ListBoxTracks}"
                                                             ItemsSource="{Binding TracksCvs.View,IsAsync=True}"
                                                             MouseDoubleClick="ListBoxTracks_MouseDoubleClick"
                                                             PreviewKeyDown="ListBoxTracks_PreviewKeyDown"
                                                             KeyUp="ListBoxTracks_KeyUp" 
                                                             BorderThickness="0"
                                                             SelectionMode="Extended">
                        <dc:MultiSelectListBox.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracksCommand}" />
                        </dc:MultiSelectListBox.InputBindings>
                        <dc:MultiSelectListBox.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource TracksHeader}" />
                        </dc:MultiSelectListBox.GroupStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SelectedTracksCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </dc:MultiSelectListBox>
                </DockPanel>
            </DockPanel>
        </dc:MultiPanePanel.RightPaneContent>
    </dc:MultiPanePanel>
</baseviews:TracksViewBase>
